import Data.List

report1 :: [Int]
report1 = [7,6,4,2,1]

checkLevelSafe :: [Int] -> Bool
checkLevelSafe (x:xs) 
  | x > head xs = checkLevelDecreasing (x:xs)
  | x < head xs = checkLevelDecreasing (x:xs)
  | x == head xs = False 

checkLevelDecreasing :: [Int] -> Bool
checkLevelDecreasing [] = True
checkLevelDecreasing (x:xs) = b && checkLevelDecreasing xs
  where b = x - (head xs) == 2 || x - (head xs) == 1


checkLevelIncreasing :: [Int] -> Bool
checkLevelIncreasing [] = True
checkLevelIncreasing (x:xs) = b && checkLevelIncreasing xs
  where b = x - (head xs) == 2 || x - (head xs) == 1
